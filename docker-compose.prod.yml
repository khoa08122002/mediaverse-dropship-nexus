version: '3.8'

services:
  # Nginx Reverse Proxy & Load Balancer
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - app
      - frontend
    restart: unless-stopped
    networks:
      - app-network

  # Frontend application
  frontend:
    build:
      context: .
      target: builder
    command: npm run dev:frontend -- --host 0.0.0.0 --port 3000
    expose:
      - "3000"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=https://${DOMAIN:-localhost}/api
      - VITE_PROXY_TARGET=http://app:3002
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - app-network

  # Main application (Backend API)
  app:
    build: .
    expose:
      - "3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - HOST=0.0.0.0
      - DATABASE_URL=postgresql://${POSTGRES_USER:-phg_user}:${POSTGRES_PASSWORD:-your-strong-password}@postgres:5432/${POSTGRES_DB:-phg_corporation}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-7d}
      - CORS_ORIGIN=${CORS_ORIGIN:-https://yourdomain.com}
    volumes:
      - uploads_data:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app-network

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-phg_corporation}
      - POSTGRES_USER=${POSTGRES_USER:-phg_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-your-strong-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    restart: unless-stopped
    networks:
      - app-network

  # Redis cache
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    expose:
      - "6379"
    restart: unless-stopped
    networks:
      - app-network

volumes:
  uploads_data:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge 